#!/bin/sh
#
# Post installation script for Jetrix
#

set -e

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <postinst> `abort-remove'
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package

JETRIX_HOME="/usr/share/jetrix";

# create the jetrix user running the daemon
adduser --quiet --system --no-create-home --disabled-password jetrix

# add a symbolic link in /usr/games
ln -s --force $JETRIX_HOME/jetrix /usr/games/jetrix

# move the conf directory to /etc/jetrix and create a symbolic link
mv $JETRIX_HOME/conf /etc/jetrix
ln -s /etc/jetrix $JETRIX_HOME/conf
chown -R jetrix:nogroup /etc/jetrix

# move the log directory to /var/log/jetrix and create a symbolic link
mv $JETRIX_HOME/log /var/log/jetrix
ln -s /var/log/jetrix $JETRIX_HOME/log
chown -R jetrix:nogroup /var/log/jetrix

# unpack the jar files in the lib directory
for FILENAME in $(find $JETRIX_HOME/lib -name "*.pack" -print)
do
  echo "Unpacking $FILENAME ..."
  FILEBASE=$(dirname $FILENAME)/$(basename $FILENAME .pack)
  unpack200 -r $FILENAME $FILEBASE
done

# start Jetrix and register it to start at the end of the boot sequence
if [ -x "/etc/init.d/jetrix" ]; then
	update-rc.d jetrix defaults 95 >/dev/null
	if [ -x "`which invoke-rc.d 2>/dev/null`" ]; then
		invoke-rc.d jetrix start || exit $?
	else
		/etc/init.d/jetrix start || exit $?
	fi
fi

exit 0
